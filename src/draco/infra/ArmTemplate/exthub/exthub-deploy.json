{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "aksK8sVersion": {
      "metadata": {
        "description": "The AKS orchestrator version to use. See https://aka.ms/supported-version-list for more details."
      },
      "type": "string"
    },
    "aksServicePrincipalClientId": {
      "metadata": {
        "description": "The AKS cluster service principal client ID. See https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal#manually-create-a-service-principal for more details."
      },
      "type": "securestring"
    },
    "aksServicePrincipalObjectId": {
      "metadata": {
        "description": "The AKS cluster service principal object ID in AAD."
      },
      "type": "string"
    },
    "aksServicePrincipalClientSecret": {
      "metadata": {
        "description": "The AKS cluster service principal client secret. See https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal#manually-create-a-service-principal for more details."
      },
      "type": "securestring"
    }
  },
  "variables": {
    "prefix": "draco",
    "uniqueId": "[uniqueString(resourceGroup().id)]",
    "apimName": "[concat(variables('prefix'), '-', variables('uniqueId'), '-apim')]",
    "aksVNetName": "[concat(variables('prefix'), '-', variables('uniqueId'), '-vnet')]",
    "aksClusterName": "[take(concat(variables('prefix'), '-', variables('uniqueId'), '-aks'), 63)]",
    "aksClusterDnsPrefix": "[take(concat(variables('prefix'), '-', variables('uniqueId'), '-aks'), 63)]",
    "cosmosAccountName": "[take(concat(variables('prefix'), '-', variables('uniqueId'), '-cdb'), 31)]",
    "eventGridTopicName": "[take(concat(variables('prefix'), '-', variables('uniqueId'), '-egt-execution'), 50)]",
    "storageAccountName": "[take(concat(variables('prefix'), variables('uniqueId'), 'stor'), 24)]",
    "searchServiceName": "[take(concat(variables('prefix'), '-', variables('uniqueId'), '-srch'), 50)]",
    "searchServiceSku": "Basic",
    "searchServiceReplicaCount": 2,
    "searchServicePartitionCount": 1,
    "searchServiceHostingMode": "Default",
    "searchServiceIndexName": "[concat(variables('extensionsCosmosContainerName'), '-index')]",
    "aksAgentVmSize": "Standard_DS2_v2",
    "aksOsType": "Linux",
    "aksAgentCount": 3,
    "aksAgentOsDiskSizeGb": 0,
    "storageAccountType": "Standard_LRS",
    "configurationStorageContainerName": "configuration",
    "resourcesStorageContainerName": "resources",
    "extensionObjectsStorageContainerName": "extensionobjects",
    "sbNamespaceName": "[take(concat(variables('prefix'), '-', variables('uniqueId'), '-bus'), 50)]",
    "sbRequestTopicName": "execution-requests",
    "sbHttpSubscriptionName": "http-v1",
    "sbRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('sbNamespaceName'), 'RootManageSharedAccessKey')]",
    "cosmosDatabaseName": "exhubdatabase",
    "cosmosDatabaseThroughput": 1000,
    "extensionsCosmosContainerName": "extensions",
    "executionsCosmosContainerName": "executions",
    "cosmosAccountResourceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosAccountName'))]",
    "cosmosDatabaseResourceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('cosmosAccountName'), 'sql', variables('cosmosDatabaseName'))]",
    "resourceTags": {
      "platform": "[variables('prefix')]"
    }
  },
  "resources": [
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "name": "[variables('aksVNetName')]",
      "tags": "[variables('resourceTags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.10.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "gateway-subnet",
            "properties": {
              "addressPrefix": "10.10.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "aks-subnet",
            "properties": {
              "addressPrefix": "10.10.1.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "apiVersion": "2020-02-01",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[resourceGroup().location]",
      "name": "[variables('aksClusterName')]",
      "tags": "[variables('resourceTags')]",
      "dependsOn": [
        "[variables('aksVNetName')]",
        "ClusterSubnetRoleAssignmentDeployment"
      ],
      "properties": {
        "kubernetesVersion": "[parameters('aksK8sVersion')]",
        "dnsPrefix": "[variables('aksClusterDnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "pool1",
            "osDiskSizeGB": "[variables('aksAgentOsDiskSizeGb')]",
            "count": "[variables('aksAgentCount')]",
            "vmSize": "[variables('aksAgentVmSize')]",
            "osType": "[variables('aksOsType')]",
            "storageProfile": "ManagedDisks",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('aksVNetName'), 'aks-subnet')]",
            "maxPods": 30
          }
        ],
        "servicePrincipalProfile": {
          "clientId": "[parameters('aksServicePrincipalClientId')]",
          "Secret": "[parameters('aksServicePrincipalClientSecret')]"
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ClusterSubnetRoleAssignmentDeployment",
      "apiVersion": "2019-10-01",
      "resourceGroup": "[resourceGroup().name]",
      "dependsOn": [
        "[variables('aksVNetName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
              "apiVersion": "2019-04-01-preview",
              "name": "[concat(variables('aksVNetName'), '/aks-subnet', '/Microsoft.Authorization/', guid(resourceGroup().id, deployment().name))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                "principalId": "[parameters('aksServicePrincipalObjectId')]",
                "scope": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('aksVNetName'), 'aks-subnet')]"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "subnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('aksVNetName'), 'aks-subnet')]"
    }
  }
}