{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "aksK8sVersion": {
      "metadata": {
        "description": "The AKS orchestrator version to use. See https://aka.ms/supported-version-list for more details."
      },
      "type": "string"
    },
    "aksServicePrincipalClientId": {
      "metadata": {
        "description": "The AKS cluster service principal client ID. See https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal#manually-create-a-service-principal for more details."
      },
      "type": "securestring"
    },
    "aksServicePrincipalClientSecret": {
      "metadata": {
        "description": "The AKS cluster service principal client secret. See https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal#manually-create-a-service-principal for more details."
      },
      "type": "securestring"
    }
  },
  "variables": {
    "uniqueId": "[uniqueString(concat(subscription().id, resourceGroup().name, resourceGroup().location))]",
    "prefix": "[concat('xhub', variables('uniqueId'))]",
    "aksClusterName": "[take(concat(variables('prefix'), 'aks'), 50)]",
    "aksClusterDnsPrefix": "[take(concat(variables('prefix'), 'aks'), 50)]",
    "cosmosAccountName": "[take(concat(variables('prefix'), 'cos'), 50)]",
    "eventGridTopicName": "[take(concat(variables('prefix'), 'execevents'), 50)]",
    "storageAccountName": "[take(concat(variables('prefix'), 'stg'), 24)]",
    "searchServiceName": "[take(concat(variables('prefix'), 'srch'), 50)]",
    "searchServiceSku": "Basic",
    "searchServiceReplicaCount": 2,
    "searchServicePartitionCount": 1,
    "searchServiceHostingMode": "Default",
    "searchServiceIndexName": "[concat(variables('extensionsCosmosContainerName'), '-index')]",
    "aksAgentVmSize": "Standard_DS2_v2",
    "aksOsType": "Linux",
    "aksAgentCount": 3,
    "aksAgentOsDiskSizeGb": 0,
    "storageAccountType": "Standard_LRS",
    "configurationStorageContainerName": "configuration",
    "resourcesStorageContainerName": "resources",
    "extensionObjectsStorageContainerName": "extensionobjects",
    "sbNamespaceName": "[take(concat(variables('prefix'), 'sb'), 50)]",
    "sbRequestTopicName": "execution-requests",
    "sbHttpSubscriptionName": "http-v1",
    "sbRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('sbNamespaceName'), 'RootManageSharedAccessKey')]",
    "cosmosDatabaseName": "exhubdatabase",
    "cosmosDatabaseThroughput": 1000,
    "extensionsCosmosContainerName": "extensions",
    "executionsCosmosContainerName": "executions",
    "cosmosAccountResourceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosAccountName'))]",
    "cosmosDatabaseResourceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('cosmosAccountName'), 'sql', variables('cosmosDatabaseName'))]"
  },
  "resources": [
    {
      "apiVersion": "2018-03-31",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[resourceGroup().location]",
      "name": "[variables('aksClusterName')]",
      "properties": {
        "kubernetesVersion": "[parameters('aksK8sVersion')]",
        "dnsPrefix": "[variables('aksClusterDnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "pool1",
            "osDiskSizeGB": "[variables('aksAgentOsDiskSizeGb')]",
            "count": "[variables('aksAgentCount')]",
            "vmSize": "[variables('aksAgentVmSize')]",
            "osType": "[variables('aksOsType')]",
            "storageProfile": "ManagedDisks"
          }
        ],
        "servicePrincipalProfile": {
          "clientId": "[parameters('aksServicePrincipalClientId')]",
          "Secret": "[parameters('aksServicePrincipalClientSecret')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-07-01",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "StorageV2",
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-03-01-preview",
          "name": "[concat('default/', variables('resourcesStorageContainerName'))]",
          "dependsOn": [
            "[variables('storageAccountName')]"
          ],
          "properties": {
            "publicAccess": "None"
          }
        },
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-03-01-preview",
          "name": "[concat('default/', variables('extensionObjectsStorageContainerName'))]",
          "dependsOn": [
            "[variables('storageAccountName')]"
          ],
          "properties": {
            "publicAccess": "None"
          }
        },
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-03-01-preview",
          "name": "[concat('default/', variables('configurationStorageContainerName'))]",
          "dependsOn": [
            "[variables('storageAccountName')]"
          ],
          "properties": {
            "publicAccess": "None"
          }
        }
      ],
      "properties": {}
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[variables('sbNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('sbRequestTopicName')]",
          "type": "topics",
          "dependsOn": [
            "[variables('sbNamespaceName')]"
          ],
          "properties": {
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "[variables('sbHttpSubscriptionName')]",
              "type": "subscriptions",
              "dependsOn": [
                "[variables('sbRequestTopicName')]"
              ],
              "properties": {
              }
            }
          ]
        }
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2015-04-08",
      "name": "[variables('cosmosAccountName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "defaultExperience": "Core (SQL)"
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": []
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
      "name": "[concat(variables('cosmosAccountName'), '/sql/', variables('cosmosDatabaseName'))]",
      "apiVersion": "2016-03-31",
      "dependsOn": [
        "[variables('cosmosAccountResourceId')]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosDatabaseName')]"
        },
        "options": {

        }
      }
    },
    {
      "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
      "name": "[concat(variables('cosmosAccountName'), '/sql/', variables('cosmosDatabaseName'), '/', variables('executionsCosmosContainerName'))]",
      "apiVersion": "2016-03-31",
      "dependsOn": [
        "[variables('cosmosDatabaseResourceId')]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('executionsCosmosContainerName')]",
          "partitionKey": {
            "paths": [
              "/executor/tenantId"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2016-03-31",
      "dependsOn": [
        "[variables('cosmosDatabaseResourceId')]"
      ],
      "name": "[concat(variables('cosmosAccountName'), '/sql/', variables('cosmosDatabaseName'), '/', variables('extensionsCosmosContainerName'))]",
      "properties": {
        "resource": {
          "id": "[variables('extensionsCosmosContainerName')]",
          "partitionKey": {
            "paths": [
              "/extensionId"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        }
      },
      "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
    },
    {
      "name": "[variables('eventGridTopicName')]",
      "type": "Microsoft.EventGrid/topics",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-01-01"
    },
    {
      "apiVersion": "2015-08-19",
      "name": "[variables('searchServiceName')]",
      "type": "Microsoft.Search/searchServices",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[toLower(variables('searchServiceSku'))]"
      },
      "properties": {
        "replicaCount": "[variables('searchServiceReplicaCount')]",
        "partitionCount": "[variables('searchServicePartitionCount')]",
        "hostingMode": "[variables('searchServiceHostingMode')]"
      }
    }
  ],
  "outputs": {
    "azureSearchServiceName": {
      "type": "string",
      "value": "[variables('searchServiceName')]"
    },
    "azureSearchIndexConfiguration": {
      "type": "object",
      "value": {
        "name": "[variables('searchServiceIndexName')]",
        "fields": [
          {
            "name": "id",
            "type": "Edm.String",
            "searchable": false,
            "facetable": false,
            "filterable": false,
            "retrievable": true,
            "sortable": false,
            "key": false
        },
        {
            "name": "extensionId",
            "type": "Edm.String",
            "searchable": false,
            "facetable": false,
            "filterable": true,
            "retrievable": true,
            "sortable": false,
            "key": false
        },
        {
            "name": "name",
            "type": "Edm.String",
            "searchable": true,
            "facetable": false,
            "filterable": true,
            "retrievable": true,
            "sortable": true,
            "analyzer": "standard.lucene",
            "key": false
        },
        {
            "name": "category",
            "type": "Edm.String",
            "searchable": true,
            "facetable": true,
            "filterable": true,
            "retrievable": true,
            "sortable": true,
            "analyzer": "standard.lucene",
            "key": false
        },
        {
            "name": "subcategory",
            "type": "Edm.String",
            "searchable": true,
            "facetable": true,
            "filterable": true,
            "retrievable": true,
            "sortable": true,
            "analyzer": "standard.lucene",
            "key": false
        },
        {
            "name": "publisherName",
            "type": "Edm.String",
            "searchable": true,
            "facetable": true,
            "filterable": true,
            "retrievable": true,
            "sortable": true,
            "analyzer": "standard.lucene",
            "key": false
        },
        {
            "name": "copyrightNotice",
            "type": "Edm.String",
            "searchable": false,
            "facetable": false,
            "filterable": false,
            "retrievable": true,
            "sortable": false,
            "key": false
        },
        {
            "name": "description",
            "type": "Edm.String",
            "searchable": true,
            "facetable": false,
            "filterable": false,
            "retrievable": true,
            "sortable": false,
            "analyzer": "standard.lucene",
            "key": false
        },
        {
            "name": "isActive",
            "type": "Edm.Boolean",
            "facetable": true,
            "filterable": true,
            "retrievable": true,
            "sortable": true
        },
        {
            "name": "tags",
            "type": "Collection(Edm.String)",
            "searchable": false,
            "facetable": false,
            "filterable": true,
            "retrievable": true,
            "key": false
        },
        {
            "name": "rid",
            "type": "Edm.String",
            "searchable": false,
            "facetable": false,
            "filterable": false,
            "retrievable": true,
            "sortable": false,
            "key": true
        }
        ]
      }
    },
    "azureSearchDataSourceConfiguration": {
      "type": "object",
      "value": {
        "name": "[variables('extensionsCosmosContainerName')]",
        "type": "cosmosdb",
        "credentials": {
          "connectionString": "[concat('AccountEndpoint=https://', variables('cosmosAccountName'), '.documents.azure.com:443/;AccountKey=', listKeys(variables('cosmosAccountResourceId'), '2016-03-31').primaryMasterKey, ';Database=', variables('cosmosDatabaseName') )]"
        },
        "container": {
          "name": "[variables('extensionsCosmosContainerName')]",
          "query": "SELECT * FROM c WHERE c._ts > @HighWaterMark AND c.modelType = 'Extension/v1' ORDER BY c._ts"
        },
        "dataChangeDetectionPolicy": {
          "@odata.type": "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
          "highWaterMarkColumnName": "_ts"
        }
      }
    },
    "azureSearchIndexerConfiguration": {
      "type": "object",
      "value": {
        "name": "[concat(variables('extensionsCosmosContainerName'), '-indexer')]",
        "dataSourceName": "[variables('extensionsCosmosContainerName')]",
        "targetIndexName": "[variables('searchServiceIndexName')]"
      }
    },
    "executionApiConfiguration": {
      "type": "object",
      "value": {
        "Logging": {
          "LogLevel": {
            "Default": "Information",
            "Microsoft": "Warning",
            "Microsoft.Hosting.Lifetime": "Information"
          }
        },
        "AllowedHosts": "*",
        "core": {
          "executionPipeline": {
            "httpClient": {
              "maximumRetryAttempts": 3
            }
          },
          "objectStorage": {
            "url": {
              "defaultUrlExpirationPeriod": "01:00:00"
            }
          }
        },
        "platforms": {
          "azure": {
            "executionPipeline": {
              "serviceBus": {
                "executionAdapter": {
                  "connectionString": "[listkeys(variables('sbRuleResourceId'), '2017-04-01').primaryConnectionString]",
                  "topicName": "[variables('sbRequestTopicName')]"
                }
              },
              "eventGrid": {
                "updatePublisher": {
                  "topicEndpoint": "[reference(variables('eventGridTopicName')).endpoint]",
                  "topicKey": "[listKeys(resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName')), '2018-01-01').key1]"
                }
              }
            },
            "objectStorage": {
              "blobStorage": {
                "inputObjectUrlProvider": {
                  "containerName": "[variables('extensionObjectsStorageContainerName')]"
                },
                "outputObjectUrlProvider": {
                  "containerName": "[variables('extensionObjectsStorageContainerName')]"
                },
                "storageAccount": {
                  "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                }
              }
            },
            "repositories": {
              "cosmosDb": {
                "execution": {
                  "endpointUri": "[concat('https://', variables('cosmosAccountName'), '.documents.azure.com:443/')]",
                  "accessKey": "[listKeys(variables('cosmosAccountResourceId'), '2016-03-31').primaryMasterKey]",
                  "databaseName": "[variables('cosmosDatabaseName')]",
                  "collectionName": "[variables('executionsCosmosContainerName')]"
                },
                "extension": {
                  "endpointUri": "[concat('https://', variables('cosmosAccountName'), '.documents.azure.com:443/')]",
                  "accessKey": "[listKeys(variables('cosmosAccountResourceId'), '2016-03-31').primaryMasterKey]",
                  "databaseName": "[variables('cosmosDatabaseName')]",
                  "collectionName": "[variables('extensionsCosmosContainerName')]"
                }
              }
            }
          }
        }
      }
    },
    "extensionMgmtApiConfiguration": {
      "type": "object",
      "value": {
        "Logging": {
          "LogLevel": {
            "Default": "Information",
            "Microsoft": "Warning",
            "Microsoft.Hosting.Lifetime": "Information"
          }
        },
        "AllowedHosts": "*",
        "platforms": {
          "azure": {
            "repositories": {
              "cosmosDb": {
                "extension": {
                  "endpointUri": "[concat('https://', variables('cosmosAccountName'), '.documents.azure.com:443/')]",
                  "accessKey": "[listKeys(variables('cosmosAccountResourceId'), '2016-03-31').primaryMasterKey]",
                  "databaseName": "[variables('cosmosDatabaseName')]",
                  "collectionName": "[variables('extensionsCosmosContainerName')]"
                }
              }
            }
          }
        }
      }
    },
    "catalogApiConfiguration": {
      "type": "object",
      "value": {
        "Logging": {
          "LogLevel": {
            "Default": "Information",
            "Microsoft": "Warning",
            "Microsoft.Hosting.Lifetime": "Information"
          }
        },
        "AllowedHosts": "*",
        "platforms": {
          "azure": {
            "search": {
              "catalog": {
                "indexName": "[variables('searchServiceIndexName')]",
                "serviceName": "[variables('searchServiceName')]",
                "queryKey": "[first(listQueryKeys(resourceId('Microsoft.Search/searchServices', variables('searchServicename')), '2015-08-19').value).key]"
              }
            },
            "repositories": {
              "cosmosDb": {
                "extension": {
                  "endpointUri": "[concat('https://', variables('cosmosAccountName'), '.documents.azure.com:443/')]",
                  "accessKey": "[listKeys(variables('cosmosAccountResourceId'), '2016-03-31').primaryMasterKey]",
                  "databaseName": "[variables('cosmosDatabaseName')]",
                  "collectionName": "[variables('extensionsCosmosContainerName')]"
                }
              }
            }
          }
        }
      }
    },
    "executionConsoleConfiguration": {
      "type": "object",
      "value": {
        "Logging": {
          "LogLevel": {
            "Default": "Information",
            "Microsoft": "Information",
            "Microsoft.Hosting.Lifetime": "Information"
          }
        },
        "AllowedHosts": "*",
        "core": {
          "executionPipeline": {
            "httpClient": {
              "maximumRetryAttempts": 3
            }
          },
          "objectStorage": {
            "url": {
              "defaultUrlExpirationPeriod": "01:00:00"
            }
          }
        },
        "platforms": {
          "azure": {
            "executionPipeline": {
              "serviceBus": {
                "requestSubscriber": {
                  "connectionString": "[listkeys(variables('sbRuleResourceId'), '2017-04-01').primaryConnectionString]",
                  "topicName": "[variables('sbRequestTopicName')]",
                  "subscriptionName": "[variables('sbHttpSubscriptionName')]"
                }
              }
            },
            "objectStorage": {
              "blobStorage": {
                "inputObjectUrlProvider": {
                  "containerName": "[variables('extensionObjectsStorageContainerName')]"
                },
                "outputObjectUrlProvider": {
                  "containerName": "[variables('extensionObjectsStorageContainerName')]"
                },
                "storageAccount": {
                  "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                }
              }
            }
          }
        }
      }
    }
  }
}
