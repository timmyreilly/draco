// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

using Draco.Core.Models;
using System.Collections.Generic;

namespace Draco.Execution.Api.Interfaces
{
    /// <summary>
    /// Processing an execution requires a lot of different information about the extension, extension version, and execution profile.
    /// Instead of passing each of these models seperately around from fucntion to function in the execution API, we package it all into a convenience class that implements this interface.
    /// This information is collected and validated against the original execution request by an execution request context builder (IExecutionRequestContextBuilder).
    /// </summary>
    public interface IExecutionRequestContext
    {
         Core.Models.Execution Execution { get; set; }

         Extension Extension { get; set; }

         ExtensionVersion ExtensionVersion { get; set; }

         ExecutionProfile ExecutionProfile { get; set; }

        /// <summary>
        /// These validation errors are generated by the execution request context builder (IExecutionRequestContextBuilder).
        /// </summary>
        /// <value></value>
         List<string> ValidationErrors { get; set; }
    }
}
